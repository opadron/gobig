#! /usr/bin/env bash

cd "$( dirname "$( dirname "$( dirname "$0" )" )" )"

echo ""
echo "PREPARING ENVIRONMENT"
echo ""

source "dev/include/test-env.bash"

set -e

$APT python-dev python-pip cmake

if [ "$FULL_VIRTUALIZATION" '=' "YES" -o "$EMULATION" '=' "YES" ] ; then
    $APT bsdtar            \
         curl              \
         openssh-client    \
         ruby              \
         ruby-childprocess \
         ruby-erubis       \
         ruby-i18n         \
         ruby-log4r        \
         ruby-net-scp      \
         ruby-net-ssh

    VAGRANT_URL="https://releases.hashicorp.com"
    VAGRANT_URL="$VAGRANT_URL/vagrant/1.7.4/vagrant_1.7.4_x86_64.deb"

    curl "$VAGRANT_URL" > vagrant.deb

    $DPKG vagrant.deb

    if [ "$FULL_VIRTUALIZATION" '=' "YES" ] ; then
        $APT virtualbox

    elif [ "$EMULATION" '=' "YES" ] ; then
        $APT bridge-utils    \
             libxslt-dev     \
             libxml2-dev     \
             libvirt-dev     \
             zlib1g-dev      \
             qemu-system-x86 \
             virt-viewer     \
             virtinst        \
             libvirt-bin

             # qemu-kvm        \
             # ubuntu-vm-builder

        vagrant plugin install vagrant-libvirt
        vagrant plugin install vagrant-mutate
        vagrant plugin install vagrant-rekey-ssh

        vagrant box add ubuntu/trusty64
        vagrant mutate ubuntu/trusty64 libvirt
    fi
fi

$PIP ansible             \
     boto                \
     coverage            \
     flake8              \
     pep8                \
     flake8-docstrings   \
     flake8-blind-except

