#! /usr/bin/env bash

cd "$( dirname "$( dirname "$( dirname "$0" )" )" )"

echo ""
echo "PREPARING ENVIRONMENT"
echo ""

source "dev/include/test-env.bash"

set -e

$APT python-dev python-pip cmake

if [ "$FULL_VIRTUALIZATION" '=' "YES" -o "$EMULATION" '=' "YES" ] ; then
    $APT vagrant

    if [ "$FULL_VIRTUALIZATION" '=' "YES" ] ; then
        $APT virtualbox

    elif [ "$EMULATION" '=' "YES" ] ; then
        $APT bridge-utils    \
             libxslt-dev     \
             libxml2-dev     \
             libvirt-dev     \
             zlib1g-dev      \
             qemu-system-x86 \
             virt-viewer     \
             virtinst        \
             libvirt-bin

             # qemu-kvm        \
             # ubuntu-vm-builder

        echo "testing libvirt functionality"
        virsh -c "qemu:///system" list

        if [ "$?" '!=' '0' ] ; then
            (
                echo "libvirt functionality test failed!"
                echo "Make sure that you are a member of the libvirtd group."
            ) 1>&2
            exit 1
        fi

        vagrant plugin install vagrant-libvirt



        http://uec-images.ubuntu.com/releases/14.04/release/ubuntu-14.04-server-cloudimg-amd64-disk1.img
    fi
fi

$PIP ansible             \
     boto                \
     coverage            \
     flake8              \
     pep8                \
     flake8-docstrings   \
     flake8-blind-except

